@page
@model MCFTAcademics.GradeByStudentId
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "GradesByStudentId";

}
@using System.Collections;
@using BL;
@{
    Student studentUser = null;
    if (Model.s != null) {
        studentUser = @Model.s;
        studentUser.Grades.Sort();
    }
    int rowCounter = 1;
    int semester = 0;
}
<h1>Grade By Student Id</h1>
<br>
<form class="form-inline" id="form" method="post">
    <div class="row">
        <label>Please Enter Student ID: </label>
        <input class="form-control" style="width:200px" type="text" required name="studentId" id="studentId">
        <button class="btn btn-primary" id="searchById" type="submit">Search</button>
    </div>


</form>
@if (studentUser != null)
{

    <h2>@studentUser.StudentId @studentUser.FirstName @studentUser.LastName</h2>
    <table class="table">

        @foreach (Grade g in studentUser.Grades)
        {
            CourseCode code = g.Subject.GetCourseCode();

            if (semester != code.Semester)
            {
                semester = code.Semester;
                
                <tr>
                    <td>
                        <h3>Semester @semester</h3>
                    </td>
                    <!--Empty fields so the above and below fields have a hr-->
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <th scope="col" width="15%">Course Code</th>
                    <th scope="col" width="20%">Subject</th>
                    <th scope="col" width="20%">Instructor</th>
                    <th scope="col" width="10%">Grade</th>
                    <th scope="col" width="35%">Comment</th>
                </tr>
            }

            if (g.Subject != null && g.Locked)
            {
                <tr>
                    <th scope="row">@code.Code</th>
                    <td>@g.Subject.Name</td>
                    <td>@g.Subject.LeadStaff.Name</td>
                    <td>@g.GradeAssigned</td>
                    <td>Grade is Locked</td>
                </tr>
                rowCounter++;
            }
            else if (g.Subject != null && !g.Locked)
            {
                <tr>
                    <th scope="row">@code.Code</th>

                    <td>@g.Subject.Name</td>
                    <td>@g.Subject.LeadStaff.Name</td>
                    <td><input id="grade#@g.Subject.Id" class="input-sm" onchange="method(this)" type="number" value="@g.GradeAssigned" /></td>

                    <td><input class="input-sm hidden" style="width:200px;padding-top: 6px;" placeholder="comment on changes" type="text" required name="commentField" id="comment#@g.Subject.Id">
                    
                    <button id="btn#@g.Subject.Id" style="padding-right: 12px;margin-right: 37px;padding-top: 2px;margin-left: 2px; width:110px; float:right" class="btn btn-danger hidden">Submit</button></td>
                </tr>
                rowCounter++;
            }
        }
    </table>
    
}



@section scripts{

    <script type="text/javascript">
        $(document).ready(function () {
            $("[name='commentField']").each(function () {
                console.log(this.value);
                console.log(this.name);
            });
            

            method = function (val) {
                //alert(val.value);
                var elementList = val.parentElement.nextElementSibling.children;
                elementList[0].classList.remove("hidden");
                elementList[1].classList.remove("hidden");
                
                }
                                    
                                //    $("form").submit(function (e) {
                                //        alert("in fucnt");
                                //        if ($('studentId').val() == '') {
                                //            alert("Please enter a student Id");
                                //            e.preventDefault();
                                //        }
                                //        if ($('studentId').val().isNaN()) {
                                //            alert("Please enter a student Id (numbers only)");
                                //            e.preventDefault();
                                //        }
                                //        else {
                                //            alert("in else");
                                //            var xmlhttp = new XMLHttpRequest();
                                //            xmlhttp.onreadystatechange = function() {
                                //            if (this.readyState == 4 && this.status == 200) {
                                //            alert(this.responseText);
                                //            }
                                //        };
                                //        xmlhttp.open("GET", "gradesByStudentId?q=" + str, true);
                                //        xmlhttp.send();
                                //        }

                                    });



                               // });
    </script>
}


