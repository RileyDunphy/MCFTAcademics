  public class BackBoneMethods
    {
        private String firstName;
        private String lastName;
        private String nameUsed;
        private String studentID;
        public string FirstName { get => firstName; set => firstName = value; }
        public string LastName { get => lastName; set => lastName = value; }
        public string StudentID { get => studentID; set => studentID = value; }
        public string NameUsed { get => nameUsed; set => nameUsed = value; }
        public BackBoneMethods(string firstName, string lastName, string nameUsed, string studentID)
        {
            this.FirstName = firstName;
            this.LastName = lastName;
            this.StudentID = studentID;
            this.NameUsed = nameUsed;
        }
        public BackBoneMethods()
        {
            //
        }
        //For datatable backbone get First Name, Last Name, StudentID
        public IEnumerable<BackBoneMethods> GetBackBone()
        {
            List<BackBoneMethods> lstBackBoneMethods = new List<BackBoneMethods>();
            //
            var conn = DBConn.GetConnection();
            //
            using (conn)
            {
                SqlCommand cmd = new SqlCommand("spBackBone2", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                conn.Open();
                SqlDataReader rdr = cmd.ExecuteReader();
                while (rdr.Read())
                {
                    BackBoneMethods back = new BackBoneMethods();
                    back.StudentID = rdr["StudentID"].ToString();
                    back.FirstName = rdr["FirstName"].ToString();
                    back.LastName = rdr["LastName"].ToString();
                    back.NameUsed = rdr["NameUsed"].ToString();
                    lstBackBoneMethods.Add(back);
                }
                conn.Close();
            }
            return lstBackBoneMethods;
        }
    }
//front end code 
<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    @* jQuery for datatables *@
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <meta name="viewport" content="width=device-width" />
    <title>Datatable Backbone</title>
</head>
<body>
    @* CSS and JS for datatables *@
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.css">
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.js"></script>
    @* CSS,JS and AJAX for datatable buttons  *@
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.6.1/css/buttons.dataTables.min.css">
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.6.1/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.html5.min.js"></script>
    <script type="text/javascript" charset="utf-8" src=""></script>
    <script type="text/javascript" charset="utf-8" src=""></script>
    <script type="text/javascript" charset="utf-8" src=""></script>
    <h2>Index</h2>
    <table id="example" class="display" style="width:100%">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.backs[0].FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.backs[0].LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.backs[0].StudentID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.backs[0].NameUsed)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.backs)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StudentID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NameUsed)
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Student ID</th>
                <th>Name Used</th>
            </tr>
        </tfoot>
    </table>
    <script>
        $(document).ready(function () {
            $('#example').DataTable({
                "paging": true,
                "ordering": true,
                "info": true,
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'csvHtml5',
                        title: 'Report'
                    },
                    {
                        extend: 'pdfHtml5',
                        title: 'Report',
                        download: 'open'
                    }
                ]
            });
        });
    </script>
    <h1>Below?</h1>
    <div class="row justify-content-center mb-2">
        <p><a asp-page="/AdmissionsOfficer" class="btn btn-primary" role="button">Back</a></p>
    </div>
</body>
</html>
//razor class/control page behind front end code
public class DatatableBackboneModel : PageModel
    {
        private BackBoneMethods objBack = new BackBoneMethods();
        public List<BackBoneMethods> backs { get; set; }
        public void OnGet()
        {
            backs = objBack.GetBackBone().ToList();
        }
    }