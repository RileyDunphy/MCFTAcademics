@page
@model MCFTAcademics.GenerateReportModel
@{
    ViewData["Title"] = "GenerateReport";
}

<h2>@ViewData["Title"]</h2>

<table class="table">
    <thead>
        <tr>
            <th scope="col">Program</th>
            <th scope="col">Year</th>
            <th scope="col">Semester</th>
            <th scope="col">Generate Report</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th scope="row">
                <select class="form-control" name="program" id="selProgram">
                    <option>Wildlife</option>
                    <option>Forestry</option>
                </select>
            </th>
            <td>
                <select class="form-control" name="year" id="selYear">
                    <option>All</option>
                    <option>1</option>
                    <option>2</option>
                </select>
            </td>
            <td>
                <select class="form-control" name="semester" id="selSemester">
                    <option>All</option>
                    <option>1</option>
                    <option>2</option>
                </select>
            </td>
            <td>
                <button type="button" id="generate" class="generate btn btn-primary">Generate Report</button>
            </td>
        </tr>
    </tbody>
</table>

<table id="table_id" class="display">
    @*<thead>
        <tr>
            <td>testHeader</td>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>test1</td>
        </tr>
        <tr>
            <td>test2</td>
        </tr>
    </tbody>*@
</table>

@section scripts{
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.js"></script>

    @* CSS and JS for datatables *@
    
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.css">

    @* CSS,JS and AJAX for datatable buttons  *@
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.6.1/css/buttons.dataTables.min.css" />
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.6.1/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.html5.min.js"></script>


    <script type="text/javascript">

        $(document).ready(function () {
                        //            $('#table_id').DataTable({
                        //    "paging": true,
                        //    "ordering": true,
                        //    "bSort": true,
                        //    "info": true,
                        //    "destroy": true,
                        //    dom: 'Bfrtip',
                        //    buttons: [
                        //        {
                        //            extend: 'csvHtml5',
                        //            title: 'Report'
                        //        },
                        //        {
                        //            extend: 'pdfHtml5',
                        //            title: 'Report',
                        //            download: 'open'
                        //        }
                        //    ]
                        //});
        });
        // https://stackoverflow.com/questions/966225/how-can-i-create-a-two-dimensional-array-in-javascript
            function createArray(length) {
                var arr = new Array(length || 0),
                    i = length;

                if (arguments.length > 1) {
                    var args = Array.prototype.slice.call(arguments, 1);
                    while(i--) arr[length-1 - i] = createArray.apply(this, args);
                }

                return arr;
            }

        $("body").on("click", ".table .generate", function () {
            if (confirm("Do you want to generate this Report?")) {

                //Get all the attributes you will need to customize the transcript
                var semester = document.getElementById("selSemester").value;
                var program = document.getElementById("selProgram").value;
                var year = document.getElementById("selYear").value;

                //Pass them in the handler method via AJAX that will generate and save our transcript on the server
                $.ajax({
                    type: "GET",
                    url: "/GenerateReport?handler=Ajax&program=" + program + "&semester=" + semester + "&year=" + year,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        //begin table inner HTML
                        document.getElementById('table_id').innerHTML = "";
                        var tableHtml = "<thead><tr><th>Student Id</th><th>First Name</th><th>Last Name</th>";

                        console.log(response);
                        var counter = 0;
                        //console.log(response["columns"]);
                        //console.log(response["grades"][5]["subject"]);
                        var courseLength = response["columns"].length;
                        //this lists 
                        var courses = [];
                        var students = [];
                        var studentDetails = [];
                        var grade = [];

                        //this is the dataset portion of the table
                        var studentRecordHtml = "<tbody>";

                        //console.log(response["grades"]);

                        while (counter < courseLength) {

                            //console.log(courses);
                            //console.log(courseCode);
                            var courseCode = (response["columns"][counter]["courseCode"]);
                            //console.log(courseCode);
                            if (!courses.includes(courseCode)) {
                                courses.push(courseCode);
                                tableHtml += "<th>" + courseCode + "</th>";
                            }
                            
                            
                            //if student has not been added to student array
                            if (!students.includes(response["columns"][counter]["studentId"])) {
                                var id = response["columns"][counter]["studentId"];
                                var fname = response["columns"][counter]["firstName"];
                                var lname = response["columns"][counter]["lastName"];

                                students.push(id);

                                var studentDetailRow = [id, fname, lname];
                                studentDetails.push(studentDetailRow);
                                console.log(response["columns"][counter]["firstName"]);
                            }
                            counter++
                        }
                        tableHtml += "</tr></thead>";
                        counter = 0;
                        var studentGrades = courses.slice();

                       // console.log("COURSES:" + courses);
                       // console.log("STUDENTS:" + students);

                        var gradeArray = createArray(students.length, courses.length);

                        gradeArray.forEach(function (item, index) { item.fill(0); });
                        

                       // console.log("length: " + gradeArray[0].length);
                       // console.log("GRADE:" + gradeArray);
                        while (counter < courseLength) {
                            var index = 0;

                            var g = -1;

                            while (index < courses.length) {
                               
                                console.log()
                                if (courses[index] === (response["columns"][counter]["courseCode"])) {
                                var cc = (response["columns"][counter]["courseCode"]);
                                var st= (response["columns"][counter]["studentId"]);
                                   
                                    //console.log(response["columns"][counter]["firstName"] + " : " + response["columns"][counter]["courseCode"] + " : " + response["columns"][counter]["grade"]);
                                    studentGrades.splice(studentGrades.indexOf(response["columns"][counter]["courseCode"]), 1);

                                    g = response["columns"][counter]["grade"];
                                    gradeArray[students.indexOf(st)][courses.indexOf(cc)] = g;
                                }
                                index++;
                            }
                            grade.push(g);

                            if (studentGrades.length == 0) {
                                console.log("undef");
                            } else {
                                console.log("this is the array!" + studentGrades);
                            }
                            counter++;
                        }
                        

                        counter = 0;
                        var len = gradeArray.length;
                        var colsLen = gradeArray[0].length;
                        

                        while (counter < len) {
                            var colCounter = 0;
                            studentRecordHtml += "<tr><td>" + studentDetails[counter][0] + "</td>";
                            studentRecordHtml += "<td>" + studentDetails[counter][1] + "</td>";
                            studentRecordHtml += "<td>" + studentDetails[counter][2] + "</td>";
                            while (colCounter < colsLen) {
                                studentRecordHtml += "<td>" + gradeArray[counter][colCounter] + "</td>";
                                colCounter++;
                            }
                            studentRecordHtml += "</tr>";
                            counter++;
                        }
                        studentRecordHtml += "</tbody>";
                        tableHtml += studentRecordHtml;

                        console.log(tableHtml);
                        document.getElementById('table_id').innerHTML = "";
                        
                        $('#table_id').html(tableHtml);
                        $('#table_id').DataTable({
                            "paging": true,
                            "ordering": true,
                            "bSort": true,
                            "info": true,
                            "destroy": true,
                            dom: 'Bfrtip',
                            buttons: [
                                {
                                    extend: 'csvHtml5',
                                    title: 'Report'
                                },
                                {
                                    extend: 'pdfHtml5',
                                    title: 'Report',
                                    download: 'open'
                                }
                            ]
                        });

                    },
                    failure: function (response) {
                        alert(response);
                    }
                });

                var returnStudentGradeList = function (courses, columns) {
                    studentGrades = [];
                    for (var i; i < columns.length; i++) {
                        var studentID = response["columns"][counter]["studentId"];
                        var courseCode = response["columns"][counter]["courseCode"];
                        var grade = response["columns"][counter]["grade"];

                        
                    }
                    
                }
            }
        });
    </script>

}
